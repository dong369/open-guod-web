# 开启缓存
proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m;

# 通过http访问https
server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  test.com;
    return 302 https://$server_name$request_uri;
}

# 配置https和反向代理
server {
    # https的默认端口是443
    listen       443;
    server_name  test.com;

    # 公钥私钥生成命令（生成的证书会提示不安全）：openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-privkey.pem -out localhost-cert.pem
    ssl on;
    ssl_certificate_key  ../certs/localhost-privkey.pem;
    ssl_certificate      ../certs/localhost-cert.pem;

    location / {
        proxy_cache my_cache;
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
    }
}

# 前后端分离部署，动静分离配置（静态资源和后台接口应用分离）
server {
    listen 7122;

    # 前台页面
    location ~* \.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|ttf)$ {
        root   /home/www/;
        index  index.html login.html;
    }

    # 后台应用
    location /isp/ {
        proxy_pass http://10.237.16.21:7122/;
    }

}

# http2配置（chrome://net-internals中可以查看http2；https://http2.akamai.com/demo/http2-lab.html可以比较性能）
server {
    listen       443 http2;
    server_name  test.com;

    http2_push_preload  on;

    ssl on;
    ssl_certificate_key  ../certs/localhost-privkey.pem;
    ssl_certificate      ../certs/localhost-cert.pem;

    location / {
        proxy_cache my_cache;
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
    }
}